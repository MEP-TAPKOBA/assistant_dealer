// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql" 
  url      = env("DATABASE_URL")
}

model User {
  id           Int      @id @default(autoincrement())
  email        String   @unique
  password     String
  phoneNumber  String?  @unique @map("phone_number")
  firstName    String?  @map("first_name")
  lastName     String?  @map("last_name")
  companyName  String?  @map("company_name")
  createdAt    DateTime @default(now()) @map("created_at")
  updatedAt    DateTime @updatedAt @map("updated_at")

  // Relations
  suppliers Supplier[]
  shops     Shop[]

  @@map("users")
}

model Supplier {
  id              Int      @id @default(autoincrement())
  userId          Int      @map("user_id")
  name            String
  productCategory String?  @map("product_category")
  description     String?
  phoneNumber     String   @map("phone_number")
  website         String?
  hidden          Boolean  @default(false)
  createdAt       DateTime @default(now()) @map("created_at")
  updatedAt       DateTime @updatedAt @map("updated_at")

  // Relations
  user             User               @relation(fields: [userId], references: [id])
  supplierProducts SupplierProduct[]

  @@map("suppliers")
}

model SupplierProduct {
  id            Int      @id @default(autoincrement())
  supplierId    Int      @map("supplier_id")
  name          String
  category      String?
  description   String?
  supplierPrice Float   @map("supplier_price")
  createdAt     DateTime @default(now()) @map("created_at")
  updatedAt     DateTime @updatedAt @map("updated_at")

  // Relations
  supplier        Supplier          @relation(fields: [supplierId], references: [id])
  productsInShops ProductInShop[]

  @@map("suppliers_products")
}

model Shop {
  id        Int      @id @default(autoincrement())
  userId    Int      @map("user_id")
  name      String
  address   String   @map("adress") // исправил опечатку, но можете оставить как "adress" если нужно
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  // Relations
  user            User            @relation(fields: [userId], references: [id])
  productsInShops ProductInShop[]

  @@map("shops")
}

model ProductInShop {
  id        Int      @id @default(autoincrement())
  shopId    Int      @map("shop_id")
  supplierProductId Int      @map("supplier_product_id")
  sellPrice Float   @map("sell_price")
  quantity  Int
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  // Relations
  shop    Shop            @relation(fields: [shopId], references: [id])
  product SupplierProduct @relation(fields: [supplierProductId], references: [id])

  @@map("products_in_shops")
}